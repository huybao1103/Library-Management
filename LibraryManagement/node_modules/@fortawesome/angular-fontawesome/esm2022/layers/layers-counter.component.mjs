import { Component, HostBinding, Input, Optional } from '@angular/core';
import { counter } from '@fortawesome/fontawesome-svg-core';
import { faWarnIfParentNotExist } from '../shared/errors/warn-if-parent-not-exist';
import * as i0 from "@angular/core";
import * as i1 from "./layers.component";
import * as i2 from "@angular/platform-browser";
class FaLayersCounterComponent {
    constructor(parent, sanitizer) {
        this.parent = parent;
        this.sanitizer = sanitizer;
        /**
         * Set `class` attribute on the SVG element rendered by the component.
         *
         * @deprecated This input breaks view encapsulation and is not recommended.
         * For simple cases (like colors), use `class` on the component itself, for
         * more complex usages, explicitly opt-in to break the view encapsulation.
         * This input is deprecated since 0.12.0 and will be removed in 0.13.0.
         */
        this.classes = [];
        faWarnIfParentNotExist(this.parent, 'FaLayersComponent', this.constructor.name);
    }
    ngOnChanges(changes) {
        if (changes) {
            const params = this.buildParams();
            this.updateContent(params);
        }
    }
    buildParams() {
        const classes = [];
        if (this.classes != null) {
            classes.push(...this.classes);
        }
        if (this.position != null) {
            classes.push(`fa-layers-${this.position}`);
        }
        return {
            title: this.title,
            classes,
            styles: this.styles,
        };
    }
    updateContent(params) {
        this.renderedHTML = this.sanitizer.bypassSecurityTrustHtml(counter(this.content || '', params).html.join(''));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: FaLayersCounterComponent, deps: [{ token: i1.FaLayersComponent, optional: true }, { token: i2.DomSanitizer }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.0", type: FaLayersCounterComponent, selector: "fa-layers-counter", inputs: { content: "content", title: "title", styles: "styles", classes: "classes", position: "position" }, host: { properties: { "innerHTML": "this.renderedHTML" }, classAttribute: "ng-fa-layers-counter" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true }); }
}
export { FaLayersCounterComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: FaLayersCounterComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'fa-layers-counter',
                    template: '',
                    host: {
                        class: 'ng-fa-layers-counter',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.FaLayersComponent, decorators: [{
                    type: Optional
                }] }, { type: i2.DomSanitizer }]; }, propDecorators: { content: [{
                type: Input
            }], title: [{
                type: Input
            }], styles: [{
                type: Input
            }], classes: [{
                type: Input
            }], position: [{
                type: Input
            }], renderedHTML: [{
                type: HostBinding,
                args: ['innerHTML']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJzLWNvdW50ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9sYXllcnMvbGF5ZXJzLWNvdW50ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBYSxRQUFRLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRWxHLE9BQU8sRUFBRSxPQUFPLEVBQXlCLE1BQU0sbUNBQW1DLENBQUM7QUFDbkYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7Ozs7QUFHbkYsTUFPYSx3QkFBd0I7SUEyQm5DLFlBQWdDLE1BQXlCLEVBQVUsU0FBdUI7UUFBMUQsV0FBTSxHQUFOLE1BQU0sQ0FBbUI7UUFBVSxjQUFTLEdBQVQsU0FBUyxDQUFjO1FBYjFGOzs7Ozs7O1dBT0c7UUFDTSxZQUFPLEdBQWMsRUFBRSxDQUFDO1FBTS9CLHNCQUFzQixDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsRixDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxFQUFFO1lBQ1gsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ2xDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDNUI7SUFDSCxDQUFDO0lBRVMsV0FBVztRQUNuQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDbkIsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksRUFBRTtZQUN4QixPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQy9CO1FBQ0QsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksRUFBRTtZQUN6QixPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7U0FDNUM7UUFDRCxPQUFPO1lBQ0wsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLE9BQU87WUFDUCxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU07U0FDcEIsQ0FBQztJQUNKLENBQUM7SUFFTyxhQUFhLENBQUMsTUFBcUI7UUFDekMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDaEgsQ0FBQzs4R0F2RFUsd0JBQXdCO2tHQUF4Qix3QkFBd0IsOFJBTHpCLEVBQUU7O1NBS0Qsd0JBQXdCOzJGQUF4Qix3QkFBd0I7a0JBUHBDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsUUFBUSxFQUFFLEVBQUU7b0JBQ1osSUFBSSxFQUFFO3dCQUNKLEtBQUssRUFBRSxzQkFBc0I7cUJBQzlCO2lCQUNGOzswQkE0QmMsUUFBUTt1RUExQlosT0FBTztzQkFBZixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFVRyxNQUFNO3NCQUFkLEtBQUs7Z0JBVUcsT0FBTztzQkFBZixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBRW9CLFlBQVk7c0JBQXJDLFdBQVc7dUJBQUMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0LCBPbkNoYW5nZXMsIE9wdGlvbmFsLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIsIFNhZmVIdG1sIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBjb3VudGVyLCBDb3VudGVyUGFyYW1zLCBTdHlsZXMgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtc3ZnLWNvcmUnO1xuaW1wb3J0IHsgZmFXYXJuSWZQYXJlbnROb3RFeGlzdCB9IGZyb20gJy4uL3NoYXJlZC9lcnJvcnMvd2Fybi1pZi1wYXJlbnQtbm90LWV4aXN0JztcbmltcG9ydCB7IEZhTGF5ZXJzQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllcnMuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmEtbGF5ZXJzLWNvdW50ZXInLFxuICB0ZW1wbGF0ZTogJycsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ25nLWZhLWxheWVycy1jb3VudGVyJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgRmFMYXllcnNDb3VudGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgY29udGVudDogc3RyaW5nO1xuICBASW5wdXQoKSB0aXRsZT86IHN0cmluZztcblxuICAvKipcbiAgICogU2V0IGBzdHlsZWAgYXR0cmlidXRlIG9uIHRoZSBTVkcgZWxlbWVudCByZW5kZXJlZCBieSB0aGUgY29tcG9uZW50LlxuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBUaGlzIGlucHV0IGJyZWFrcyB2aWV3IGVuY2Fwc3VsYXRpb24gYW5kIGlzIG5vdCByZWNvbW1lbmRlZC5cbiAgICogRm9yIHNpbXBsZSBjYXNlcyAobGlrZSBjb2xvcnMpLCB1c2UgYHN0eWxlYCBvbiB0aGUgY29tcG9uZW50IGl0c2VsZiwgZm9yXG4gICAqIG1vcmUgY29tcGxleCB1c2FnZXMsIGV4cGxpY2l0bHkgb3B0LWluIHRvIGJyZWFrIHRoZSB2aWV3IGVuY2Fwc3VsYXRpb24uXG4gICAqIFRoaXMgaW5wdXQgaXMgZGVwcmVjYXRlZCBzaW5jZSAwLjEyLjAgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjEzLjAuXG4gICAqL1xuICBASW5wdXQoKSBzdHlsZXM/OiBTdHlsZXM7XG5cbiAgLyoqXG4gICAqIFNldCBgY2xhc3NgIGF0dHJpYnV0ZSBvbiB0aGUgU1ZHIGVsZW1lbnQgcmVuZGVyZWQgYnkgdGhlIGNvbXBvbmVudC5cbiAgICpcbiAgICogQGRlcHJlY2F0ZWQgVGhpcyBpbnB1dCBicmVha3MgdmlldyBlbmNhcHN1bGF0aW9uIGFuZCBpcyBub3QgcmVjb21tZW5kZWQuXG4gICAqIEZvciBzaW1wbGUgY2FzZXMgKGxpa2UgY29sb3JzKSwgdXNlIGBjbGFzc2Agb24gdGhlIGNvbXBvbmVudCBpdHNlbGYsIGZvclxuICAgKiBtb3JlIGNvbXBsZXggdXNhZ2VzLCBleHBsaWNpdGx5IG9wdC1pbiB0byBicmVhayB0aGUgdmlldyBlbmNhcHN1bGF0aW9uLlxuICAgKiBUaGlzIGlucHV0IGlzIGRlcHJlY2F0ZWQgc2luY2UgMC4xMi4wIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gMC4xMy4wLlxuICAgKi9cbiAgQElucHV0KCkgY2xhc3Nlcz86IHN0cmluZ1tdID0gW107XG4gIEBJbnB1dCgpIHBvc2l0aW9uPzogJ2JvdHRvbS1yaWdodCcgfCAnYm90dG9tLWxlZnQnIHwgJ3RvcC1yaWdodCcgfCAndG9wLWxlZnQnO1xuXG4gIEBIb3N0QmluZGluZygnaW5uZXJIVE1MJykgcmVuZGVyZWRIVE1MOiBTYWZlSHRtbDtcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIHBhcmVudDogRmFMYXllcnNDb21wb25lbnQsIHByaXZhdGUgc2FuaXRpemVyOiBEb21TYW5pdGl6ZXIpIHtcbiAgICBmYVdhcm5JZlBhcmVudE5vdEV4aXN0KHRoaXMucGFyZW50LCAnRmFMYXllcnNDb21wb25lbnQnLCB0aGlzLmNvbnN0cnVjdG9yLm5hbWUpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmIChjaGFuZ2VzKSB7XG4gICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLmJ1aWxkUGFyYW1zKCk7XG4gICAgICB0aGlzLnVwZGF0ZUNvbnRlbnQocGFyYW1zKTtcbiAgICB9XG4gIH1cblxuICBwcm90ZWN0ZWQgYnVpbGRQYXJhbXMoKTogQ291bnRlclBhcmFtcyB7XG4gICAgY29uc3QgY2xhc3NlcyA9IFtdO1xuICAgIGlmICh0aGlzLmNsYXNzZXMgIT0gbnVsbCkge1xuICAgICAgY2xhc3Nlcy5wdXNoKC4uLnRoaXMuY2xhc3Nlcyk7XG4gICAgfVxuICAgIGlmICh0aGlzLnBvc2l0aW9uICE9IG51bGwpIHtcbiAgICAgIGNsYXNzZXMucHVzaChgZmEtbGF5ZXJzLSR7dGhpcy5wb3NpdGlvbn1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgY2xhc3NlcyxcbiAgICAgIHN0eWxlczogdGhpcy5zdHlsZXMsXG4gICAgfTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlQ29udGVudChwYXJhbXM6IENvdW50ZXJQYXJhbXMpIHtcbiAgICB0aGlzLnJlbmRlcmVkSFRNTCA9IHRoaXMuc2FuaXRpemVyLmJ5cGFzc1NlY3VyaXR5VHJ1c3RIdG1sKGNvdW50ZXIodGhpcy5jb250ZW50IHx8ICcnLCBwYXJhbXMpLmh0bWwuam9pbignJykpO1xuICB9XG59XG4iXX0=